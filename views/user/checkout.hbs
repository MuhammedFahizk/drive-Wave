<style>
    p {
        color: rgb(22, 83, 197);
    }

    input {
        border: solid 1px;
        border-radius: 5px;
        padding: 5px;
    }

    .right {
        border-radius: 20px;
        border: 1px solid;
        background-color: rgb(228, 228, 228);
        
    }
    #paymentPage{
       
        border-radius: 10px;
        border: 1px solid;
    }
    
.time-picker {
  width: 300px;
  height: 20px;
  background-color: #f0f0f0;
  position: relative;
  cursor: pointer;
}

.time-handle {
  width: 20px;
  height: 20px;
  background-color: #007bff;
  position: absolute;
  top: 0;
  left: 0;
  border-radius: 50%;
  cursor: pointer;
}
     .flatpickr-calendar {
            background-color: #f0f0f0;
            border: 2px solid #ccc;
            border-radius: 5px;
        }
        .flatpickr-day {
            background-color: transparent;
        }
        .flatpickr-day.today {
            background-color: #01d28e;
        }
        .flatpickr-month {
            font-size: 1.em;
        }
</style>
<head>
      <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">

</head>
<section class="ftco-section bg-light col-12 row p-0 p-md-5 m-0 ">
    <div class="container p-0 p-md-5">
        <div class="container p-md-4 p-4 col-md-12 justify-content-center ">



            {{#if payment}}

            <div id="paymentPage" class="body row justify-content-center p-md-1 pr-md-4 col-md-12 m-0 ">
                <div class="col-12 justify-content-left d-flex ">
                    <p class="mr-3 text-success">Booking</p>
                    <p class="mr-3 text-success">Payment</p>
                </div>
                <div class="col-md-7 ">
                    <div class="row  ">
                        <h2 class="px-md-3 py-3">Payment Details</h2>
                        <div class="form-group row justify-content-center my-1 col-md-12">

                            <div class="form-check  col-5">
                                <a class="px-3">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"
                                        style="fill: rgba(0, 0, 0, 1);transform: ;msFilter:;">
                                        <path
                                            d="M20 4H4c-1.103 0-2 .897-2 2v2h20V6c0-1.103-.897-2-2-2zM2 18c0 1.103.897 2 2 2h16c1.103 0 2-.897 2-2v-6H2v6zm3-3h6v2H5v-2z">
                                        </path>
                                    </svg>
                                </a>
                                <input class="form-check-input" type="radio" name="paymentOption" id="exampleRadio1"
                                    value="cardPay" checked>
                                <label class="form-check-label" for="exampleRadio1">
                                    Option 1
                                </label>
                            </div>
                            <div class="form-check  col-5 ">
                                <a class="px-3">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"
                                        style="fill: rgba(0, 0, 0, 1);transform: ;msFilter:;">
                                        <path
                                            d="M19.554 9.488c.121.563.106 1.246-.04 2.051-.582 2.978-2.477 4.466-5.683 4.466h-.442a.666.666 0 0 0-.444.166.72.72 0 0 0-.239.427l-.041.189-.553 3.479-.021.151a.706.706 0 0 1-.247.426.666.666 0 0 1-.447.166H8.874a.395.395 0 0 1-.331-.15.457.457 0 0 1-.09-.363c.061-.373.148-.938.267-1.689.117-.75.206-1.314.267-1.689s.15-.938.272-1.685c.121-.748.212-1.31.271-1.685.033-.248.179-.371.433-.371h1.316c.893.013 1.682-.057 2.375-.211 1.172-.262 2.134-.744 2.886-1.449.685-.637 1.203-1.462 1.56-2.473.162-.47.277-.917.352-1.338.006-.041.014-.066.025-.074.008-.011.022-.014.035-.011a.378.378 0 0 1 .062.035c.524.398.854.941.98 1.632zm-1.728-2.836c0 .717-.154 1.508-.465 2.374-.537 1.562-1.547 2.618-3.037 3.168-.758.269-1.602.408-2.535.425 0 .006-.301.007-.904.007l-.903-.007c-.672 0-1.067.32-1.187.964-.013.053-.298 1.83-.855 5.329-.008.066-.048.102-.121.102H4.854a.473.473 0 0 1-.369-.165.469.469 0 0 1-.115-.39L6.702 3.664a.784.784 0 0 1 .276-.483.785.785 0 0 1 .519-.19h6.014c.228 0 .555.044.979.131.428.084.801.194 1.123.321.718.274 1.266.688 1.645 1.237.379.552.568 1.207.568 1.972z">
                                        </path>
                                    </svg>
                                </a>
                                <input class="form-check-input" type="radio" name="paymentOption" id="exampleRadio2"
                                    value="upiPay">
                                <label class="form-check-label" for="exampleRadio2">
                                    Option 2
                                </label>
                            </div>

                        </div>
                        <div class="rounded ftco-animate p-md-5 col-12" id="cardPay">
                            <div class="col-12 p-2">
                                <input type="text" class="col-12" name="cardNumber" placeholder="Card Number" required>
                            </div>
                            <div class="col-12 p-2">
                                <input type="text" class="col-12" name="cardHolderName" placeholder="Holder Name"
                                    required>
                            </div>
                            <div class="col-12 row mx-0 ">
                                <div style="border:solid 1px ;border-radius: 5px;height:40px"
                                    class="col-md-2 col-3 p-0 row mx-0 m-0 mt-2 ">
                                    <input type="text" style="border: 0;" class="col-6 p-0  m-0 " name="expiryMonth"
                                        placeholder="MM /" required>
                                    <input type="text" style="border: 0;" class="col-6 p-0 m-0 " name="expiryYear"
                                        placeholder="YY" required>
                                </div>
                                <div class="col-6 p-2 row">
                                    <input type="password" class="col-12 ml-4" name="cvv" placeholder="CVV" required>
                                </div>
                            </div>
                            <div class="col-12 p-2">
                                <div class="row justify-content-end">
                                    <input type="hidden" id="bookingId" value="{{bookingId}}">
                                    <div class="col-12">
                                        <p id="errorPayment"></p>
                                        <button type="button" style="border-radius: 12px;" id="paymentBtn"
                                            class="btn btn-primary py-2 col-12">
                                            {{amount}} Pay
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="car-wrap rounded ftco-animate" id="upiPay" style="display:none;">
                            <h3>UPI Payment</h3>
                            <p>This is the payment option for UPI payment.</p>
                        </div>
                    </div>
                </div>

                <div class=" right col-md-5  justify-content-center px-4 my-4 py-4">
                    <h6 class="text-dark">{{car.carName}}</h6>
                    <div style="border-radius:10px;" class="col-12  bg-light  p-0 m-0 row">
                        <div class="col-3"
                            style="border-radius:10px;background-image: url({{car.carImage}}); background-size: cover; background-position: center; height: 100px; width: 100%;">


                        </div>
                        <div class="col-9 p-2">
                            <h6 class="text-dark">{{car.carName}}</h6>
                            {{#if dayDifferenceIn }}
                            <h6 class="text-dark">{{formattedDropDate}} to {{formattedPickDate}}</h6>
                            <h6 class="text-dark">{{dayDifferenceIn}} / Days</h6>
                            {{else}}
                            <div class="col-12 justify-content-center">
                                <p class="text-danger">Choose Pic Up Date and Return DAte</p>

                            </div>
                            {{/if}}
                        </div>

                    </div>
                    <div style="border-radius:10px;" class="col-12  bg-light my-4 px-2 m-0 row">

                        {{!-- <div class="col-3"
                            style="border-radius:10px;background-image: url({{car.carImage}}); background-size: cover; background-position: center; height: 100px; width: 100%;">

                        </div>
                        --}}
                        <div class="col-12  m-0 px-3 p-2">
                            <h5 class="p-1 m-0">Payment Details</h5>
                            <hr class="m-0 p-0">

                            <div class="d-flex m-0 mt-0 px-2  ">
                                <span class="cat">Total Days </span>
                                </span>
                                <p class="price ml-md-auto m-0 p-0">{{dayDifferenceIn}} <span></span></p>
                            </div>
                            <div class="d-flex m-0 mt-0 px-2  ">
                                <span class="cat">Per Day Rent </span>
                                </span>
                                <p class="price ml-md-auto m-0 p-0">{{car.dayRent}} <span></span></p>
                            </div>
                            <hr class="m-0 p-0">
                            <div class="d-flex m-0 mb-0 px-2">
                                <span class="cat">Rent Amount </span>
                                </span>
                                <p class="price ml-md-auto p-0 m-0">{{amount}} <span></span></p>
                            </div>


                            {{!-- {{#if dayDifferenceIn }}
                            <h6 class="text-dark">{{formattedDropDate}} to {{formattedPickDate}}</h6>
                            <h6 class="text-dark">{{dayDifferenceIn}} / Days</h6>

                            {{/if}} --}}
                        </div>


                    </div>



                </div>
            </div>
        </div>
        {{else}}
        <div id="bookingPage" class="body row justify-content-center p-1 col-12 ">
            <div class="col-12 justify-content-left d-flex ">
                <p class="mr-3 text-success">Booking</p>
                <p class="mr-3 ">Payment</p>
            </div>
            <div class="col-7 ">
                <div class="row">

                    <h2 class="px-3 py-3">Booking Page</h2>
                    <div class="col-12 row ">
                        <form action="" class="p-3" id="bookingForm">
                            <input type="text" class=" col-12 mt-2" name="email" value="{{user.email}}"
                                placeholder="Email Address" required>
                            <input type="text" class="col-12 mt-3 " value="{{user.phone}}" name="phone"
                                placeholder="Phone Number" required>
                            <input class=" col-12 mt-3" name="houseName" value="{{address.houseName}}"
                                placeholder="House Name">
                            <input type="text" class="  col-5 mt-3 " name="place" value="{{address.place}}"
                                placeholder="Place">
                            <input type="text" maxlength="3" class=" col-5 mt-3 " name="zip" value="{{address.zip}}"
                                placeholder="Zip">
                            <input  id="bookingPageSubmit" type="button" class="col-12 mt-4 btn btn-primary"
                                value="Booking">
                        </form>
                        <h6 style="display: none;" id="errorMessage" class="mx-4 text-danger">You Already Booked this
                            Car. <a style="text-decoration: solid;" href="/bookedCars"> Go To Bookings </a> </h6>
                    </div>
                </div>

            </div>
            <div class=" right col-5  justify-content-center px-4  py-4">
                <div style="border-radius:10px;" class="col-12  bg-light  p-0 m-0 row">
                    <div class="col-3"
                        style="border-radius:10px;background-image: url({{car.carImage}}); background-size: cover; background-position: center; height: 100px; width: 100%;">


                    </div>
                    <div class="col-9 p-2">
                        <h6 class="text-dark">{{car.carName}}</h6>
                        {{#if dayDifferenceIn }}
                        <h6 class="text-dark">{{formattedDropDate}} to {{formattedPickDate}}</h6>
                        <h6 class="text-dark">{{dayDifferenceIn}} / Days</h6>
                        {{else}}
                        <div class="col-12 justify-content-center">
                            <p class="text-danger">Choose Pic Up Date and Return DAte</p>

                        </div>
                        {{/if}}
                    </div>

                </div>

                <div></div>
                {{#if dayDifferenceIn }}

                {{else }}
                <div class="row col-12  m-0 my-4 p-0  car-wrap rounded ftco-animate">

                    <form class="row col-12 m-2 p-0 justify-content-center ">
                        <input style="border: 1px solid;" id="pickDate" type="text" value="{{formattedPickDate}}"
                            class="col-4 mr-1  rounded p-1 m-0">
                        <input style="border: 1px solid;" id="dropDate" type="text" value="{{formattedDropDate}}"
                            class="col-4 mr-1  rounded p-1 m-0">
                        <input style="border: 1px solid;" id="carId" value="{{car._id}}" type="hidden" class=" ">

                        <input type="button" id="submitButton" class="btn btn-outline-success col-2 m-0  px-1 py-0"
                            value="OK">
                        <h6 class="text-danger" id="error"></h6>
                    </form>
                </div>

                {{/if}}

                <div id="userDetails" class="car-wrap rounded ftco-animate ">

                    <div id="text" class="text mt-4">
                        <div class="d-flex mb-1">
                            <span class="cat">Car Model </span>
                            </span>
                            <p class="price ml-md-auto ml-2">{{car.carModal}} <span></span></p>
                        </div>
                        <div class="d-flex mb-1">
                            <span class="cat">Fuel Type </span>
                            </span>
                            <p class="price ml-md-auto ml-2">{{car.fuelType}} <span></span></p>
                        </div>
                        <div class="d-flex mb-1">
                            <span class="cat">Transmission </span>
                            </span>
                            <p class="price ml-md-auto ml-2">{{car.TransmitionType}} <span></span></p>
                        </div>
                        <div class="d-flex mb-1">
                            <span class="cat">Day Rent</span>
                            </span>
                            <p class="price ml-md-auto ml-2">{{car.dayRent}} <span></span></p>
                        </div>



                    </div>
                    <div id="calendar">

                    </div>

                </div>
                <div class="car-wrap rounded ftco-animate row col-12 m-0 px-4 p-4 justify-content-center ">

                    <input type="button" id="changeDate" class="btn btn-outline-info mx-2" value="Change Date">
                    <a type="button" href="/cars" class="btn btn-outline-success mx-2" value="">Change Car</a>

                </div>
            </div>

        </div>
        {{/if}}
        {{!-- // modal --}}
        <button style="display:none;" type="button" class="btn btn-primary" data-toggle="modal"
            data-target="#paymentSuccess">
            Launch demo modal
        </button>

        <!-- Modal -->
        <div class="modal fade" id="paymentSuccess" tabindex="-1" role="dialog"
            aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered" role="document">
                <div class="modal-content">

                    <div class="modal-body ">

                    </div>
                </div>

            </div>
            {{!-- <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            <button type="button" class="btn btn-primary">Save changes</button>--}}
        </div>

        {{!-- end --modal --}}


    </div>
    </div>
</section>
<script src='https://cdn.jsdelivr.net/npm/fullcalendar@6.1.10/index.global.min.js'></script>
<script src='https://cdn.jsdelivr.net/npm/fullcalendar@6.1.10/main.min.js'></script>
<script type="text/javascript" src="https://checkout.razorpay.com/v1/razorpay.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>

<script>

    const razorpay = new Razorpay({
        key: "rzp_test_4n6m1t1iIOWyRe", // Replace with your Razorpay API key
    });

    // Use booking ID if available
    const bookingId = sessionStorage.getItem('bookingId');

    // Use booking ID if available
    if (bookingId) {
        // Update your frontend to display the booking ID
        console.log(bookingId)
        document.getElementById('bookingIdElement').textContent = bookingId;
    }
    console.log(sessionStorage)

 flatpickr("#pickDate", {
            enableTime: true,
            dateFormat: "Y-m-d H:i",
            minTime: "08:00",
            maxTime: "22:00",
            minDate: "today",
            onChange: function(selectedDates, dateStr, instance) {
                document.getElementById("dropDate")._flatpickr.set("minDate", dateStr);
            }
        });
        
        flatpickr("#dropDate", {
            enableTime: true,
            dateFormat: "Y-m-d H:i",
            minTime: "08:00",
            maxTime: "22:00",
            minDate: "today"
        });

    const calendarEl = document.getElementById('calendar');
    const bookingPage = document.getElementById('bookingPage');
    const paymentPage = document.getElementById('paymentPage');

    const pickDateInput = document.getElementById('pickDate');
    const dropDateInput = document.getElementById('dropDate');
    const error = document.getElementById('error');
    const changeDateButton = document.getElementById('changeDate');
    const bookingPageSubmit = document.getElementById('bookingPageSubmit');
    const radioButtons = document.querySelectorAll('input[name="paymentOption"]');
    const cardPayDiv = document.getElementById('cardPay');
    const upiPayDiv = document.getElementById('upiPay');
    if (changeDateButton) {
        changeDateButton.addEventListener('click', (e) => {
            e.preventDefault();
            axios.get('/changeDate')
                .then(response => {
                    // Handle response data here
                    console.log(response.data);
                    window.location.href = '/bookingCar'
                })
                .catch(error => {
                    // Handle error
                    console.error('Error:', error);
                });
        });
    }
    radioButtons.forEach(function (radioButton) {
        radioButton.addEventListener('change', function () {
            if (this.value === 'cardPay') {
                cardPayDiv.style.display = 'block';
                upiPayDiv.style.display = 'none';
            } else if (this.value === 'upiPay') {
                cardPayDiv.style.display = 'none';
                upiPayDiv.style.display = 'block';
            }
        });
    });
    function goBack() {
        window.history.back();
    }
    let data = {}; // Define data object in a scope accessible to both event listeners
    console.log(data);

    if (bookingPageSubmit) {
        bookingPageSubmit.addEventListener('click', (e) => {
            e.preventDefault();
            if (pickDateInput || dropDateInput) {
                if (pickDateInput.value === "" || dropDateInput.value === "") {
                    return error.innerHTML = 'Enter Pick-Up date and Drop-off date';
                }
            }
            const formDatas = {}; // Initialize an empty object

            const bookingForm = document.getElementById('bookingForm');
            const formData = new FormData(bookingForm);

            for (const pair of formData.entries()) {
                const [key, value] = pair;
                formDatas[key] = value; // Use key as property of the object
            }

            console.log(formDatas);

            e.preventDefault();
            axios.post('/bookedCar', formDatas)
                .then((response) => {

                    console.log('message:', response.data);
                    sessionStorage.setItem('formData', JSON.stringify(response.data));
                    // Redirect to bookingCar page
                    window.location.href = '/bookingCar';

                })
                .catch(error => {
                    const errorMessage = document.getElementById('errorMessage')
                    errorMessage.style.display = 'block'
                });
        });
    }

    // Move this outside of the bookingPageSubmit event listener
    const paymentBtn = document.getElementById('paymentBtn');
    if (paymentBtn) {
        paymentBtn.addEventListener('click', function () {
            const cardName = document.querySelector('#cardPay input[name="cardHolderName"]').value;
            let cardNumber = document.querySelector('#cardPay input[name="cardNumber"]').value.trim();
            const cvv = document.querySelector('#cardPay input[name="cvv"]').value;
            const expiryMonth = document.querySelector('#cardPay input[name="expiryMonth"]').value;
            const expiryYear = document.querySelector('#cardPay input[name="expiryYear"]').value;
            const errorPayment = document.getElementById('errorPayment');
            const bookingId = document.getElementById('bookingId').value;
            cardNumber = cardNumber.replace(/\s/g, '');
const cardNumberPattern = /^\d{16}$/;
const cvvPattern = /^\d{3,4}$/;
const expiryMonthPattern = /^(0[1-9]|1[0-2])$/;

if (cardNumber === '') {
    errorPayment.textContent = 'Please enter card number.';
    return false;
}

if (!cardNumberPattern.test(cardNumber)) {
    errorPayment.textContent = 'Please enter a valid card number (16 digits).';
    return false;
}

if (cardName === '') {
    errorPayment.textContent = 'Please enter card holder Name';
    return false;
}

if (cvv === '') {
    errorPayment.textContent = 'Please enter CVV.';
    return false;
}

if (!cvvPattern.test(cvv)) {
    errorPayment.textContent = 'Please enter a valid CVV (3 or 4 digits).';
    return false;
}

if (expiryMonth === '') {
    errorPayment.textContent = 'Please enter expiry month.';
    return false;
}

if (!expiryMonthPattern.test(expiryMonth)) {
    errorPayment.textContent = 'Please enter a valid expiry month (01 to 12).';
    return false;
}

const currentYear = new Date().getFullYear();
const expiryYearPattern = /^\d{2}$/;

if (expiryYear === '') {
    errorPayment.textContent = 'Please enter expiry year.';
    return false;
}

if (!expiryYearPattern.test(expiryYear)) {
    errorPayment.textContent = 'Please enter a valid expiry year.';
    return false;
}

// Convert two-digit year to four-digit year
const parsedExpiryYear = parseInt(expiryYear, 10);
const fullExpiryYear = currentYear.toString().slice(0, 2) + expiryYear;

if (parseInt(fullExpiryYear, 10) < currentYear) {
    errorPayment.textContent = 'Expiry year must be in the future.';
    return false;
}
    errorPayment.textContent = '';




            console.log("Card details:", cardName, cardNumber, cvv, expiryMonth, expiryYear);
            axios.post('/orderDetails', {
                bookingId
            }).then(response => {
                console.log(response)
                data = {
                    amount: response.data.thisCar.totalPrice * 100,
                    email: response.data.user.email, // Assuming email is part of form data
                    contact: response.data.user.phone, // Assuming phone is part of form data
                    order_id: response.data.thisCar.payment_id,
                    method: 'card',
                    'card[name]': cardName,
                    'card[number]': cardNumber,
                    'card[cvv]': cvv,
                    'card[expiry_month]': expiryMonth,
                    'card[expiry_year]': expiryYear
                };
                console.log(response.data.thisCar._id);
                razorpay.createPayment(data);
                razorpay.on('payment.success', function (resp) {
                    console.log(resp)
                    paymentVerification(resp, response.data.thisCar._id)

                }); // will pass payment ID, order ID, and Razorpay signature to success handler.

                razorpay.on('payment.error', function (resp) { alert(resp.error.description); }); // will pass error object to error handler

            })
        }
        )
    }

   const paymentVerification = (resp, bookingId) => {
    console.log(bookingId);
    axios.post('/payment/verification', {
        resp,
        bookingId,
        method: 'Card'
    }).then((response) => {
        sessionStorage.setItem('formData', '');

        const bookedCar = response.data.bookedCar[0];
        console.log(bookedCar);

        document.querySelector('#paymentSuccess .modal-body').innerHTML = `
            <div class="justify-content-center row py-4">
                <p style="font-size: 35px;" class="text-success">Payment successful!</p>
            </div>

            <div class="justify-content-center row py-3">
                <div style="align-items: center;" class="col-9">
                    <div class="d-flex mb-1">
                        <span class="cat">Payment Type </span>
                        </span>
                        <p class="price ml-md-auto ml-2 m-0">Card<span></span></p>
                    </div>
                    <div class="d-flex m-0">
                        <span class="cat">Email </span>
                        </span>
                        <p class="price ml-md-auto ml-2 m-0">${response.data.email} <span></span></p>
                    </div>
                    <div class="d-flex mb-0 m-0">
                        <span class="cat">Phone </span>
                        </span>
                        <p class="price ml-md-auto ml-2 m-0">${response.data.phone} <span></span></p>
                    </div>
                    <div class="d-flex mb-1 mt-1 m-0 ">
                        <span class="cat text-dark">Amount Payed </span>
                        </span>
                        <p class="price ml-md-auto ml-2 m-0">${bookedCar.totalPrice} <span></span></p>
                    </div>
                    <div class="d-flex mb-0 m-0">
                        <span class="cat">Transaction Id </span>
                        </span>
                        <p class="price ml-md-auto ml-2 m-0">${bookedCar.payment_id} <span></span></p>
                    </div>
                </div>
            </div>

            <div style="align-items: center;" class=" justify-content-center col-12 row my-3">
                <button type="button" id="close" class="btn btn-secondary mr-2" data-dismiss="modal">Close</button>
            </div>
        `;

        $('#paymentSuccess').modal('show');

        // Event listener for the close button
        const close = document.getElementById('close');
        if (close) {
            close.addEventListener('click', () => {
                // Redirect to the bookedCars page
                window.location.href = '/bookedCars';
            });
        }
    }).catch((error) => {
        console.error(error);
    });
};

    document.addEventListener('DOMContentLoaded', function () {
        const submitBtn = document.getElementById('submitButton');
        if (submitBtn) {
            submitBtn.addEventListener('click', function (e) {
                e.preventDefault();
                const pickDate = document.getElementById('pickDate').value;
                const dropDate = document.getElementById('dropDate').value;
                const carId = document.getElementById('carId').value;
                if (!pickDate || !dropDate) {
                    return error.innerHTML = 'Enter PickUp Date And Return Date';
                }

                calendarEl.style.display = 'none';
                console.log(pickDate);
                axios.get(`/addDate?pickDate=${pickDate}&&dropDate=${dropDate}&&carId=${carId} `)
                    .then(response => {
                        console.log(response);

                        document.getElementById('text').style.display = 'block';
                        window.location.href = '/bookingCar';

                        return error.innerHTML = '';

                    }).catch(response => {
                        const error = document.getElementById('error')
                        error.innerHTML = response.response.data.message
                        console.log(response.response.data.message)
                    });
            });
        }

    })



    window.addEventListener('popstate', function (event) {
        // Check if the popstate event is triggered by navigating back
        if (event.state && event.state.pageReload) {
            // Reload the page
            location.reload();

        }
    });

    // Push a state into history to trigger popstate event when navigating back
    history.pushState({ pageReload: true }, '');


</script>