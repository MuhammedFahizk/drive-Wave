{{!-- <style>
  .image-container {
    position: relative;
  }

  .hover-icon {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    opacity: 0;
    /* Initially hidden */
    transition: opacity 0.3s ease;
  }

  .image-container:hover .hover-icon {
    opacity: 1;
    /* Show icon on hover */
  }

  .heart {
    width: 100px;
    height: 100px;
    position: relative;
  }


  .hover-icon {
    position: relative;
  }

  .hover-icon .col-2 {
    position: absolute;
    top: -150px;
    right: -115px;
  }

  #calendar {
    width: 300px;
    /* Adjust the width as needed */
    height: 300px;
    /* Adjust the height as needed */
    overflow: hidden;
    display: none;
    /* Hide overflow if necessary */
  }
</style> --}}

<style>
  .time-picker {
    width: 300px;
    height: 20px;
    background-color: #f0f0f0;
    position: relative;
    cursor: pointer;
  }
@media (max-width: 576px) {
    .time-picker {
        width:100px; /* Adjust the width for smaller screens */
    }
}
  .time-handle {
    width: 20px;
    height: 20px;
    background-color: #007bff;
    position: absolute;
    top: 0;
    left: 0;
    border-radius: 50%;
    cursor: pointer;
  }

  .flatpickr-calendar {
    background-color: #f0f0f0;
    border: 2px solid #ccc;
    border-radius: 5px;
  }

  .flatpickr-day {
    background-color: transparent;
  }

  .flatpickr-day.today {
    background-color: #01d28e;
  }

  .flatpickr-month {
    font-size: 1.em;
  }

  #locations {
    display: none;
    overflow-x: hidden;
    overflow-y: scroll;
    height: 400px;
  }

  #locations ul {
    list-style: none;
    padding: 0;
  }

  #locations ul li {
    border: 1px solid #ccc;
    padding: 10px;
    margin: 5px;
    border-radius: 5px;
  }


  #locations ul li a {
    text-decoration: none;
    color: black;
    font-size: larger;
    font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
  }

  ::-webkit-scrollbar {
    width: 10px;
    /* Width of the scrollbar */
  }

  /* Change scrollbar thumb */
  ::-webkit-scrollbar-thumb {
    background-color: #64d3ca;
    /* Color of the thumb */
    border-radius: 10px;
    /* Rounded corners of the thumb */
  }

  /* Change scrollbar track */
  ::-webkit-scrollbar-track {
    background-color: #faf3f3;
    /* Color of the track */
  }

  /* Change scrollbar corner */
  ::-webkit-scrollbar-corner {
    background-color: #fff;
    /* Color of the corner */
  }
</style>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/ionicons@5.3.0/dist/ionicons.min.css">
{{!--
<link href='https://cdn.jsdelivr.net/npm/bootstrap@4.5.0/dist/css/bootstrap.css' rel='stylesheet'> --}}
<link href='https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@5.13.1/css/all.css' rel='stylesheet'>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">

{{#if location  }}
{{else pickDate }}
{{else}}
<section class="hero-wrap hero-wrap-2 js-fullheight" style="background-image: url('images/bg_3.jpg');"
  data-stellar-background-ratio="0.5">
  <div class="overlay"></div>
  <div class="container">
    <div class="row no-gutters slider-text js-fullheight align-items-end justify-content-start">
      <div class="col-md-9 ftco-animate pb-5">
        <p class="breadcrumbs"><span class="mr-2"><a href="/">Home <i class="ion-ios-arrow-forward"></i></a></span>
          <span>Cars <i class="ion-ios-arrow-forward"></i></span></p>
        <h1 class="mb-3 bread">Choose Your Car</h1>
      </div>
    </div>
  </div>
</section>

<section style="color: black;" class="ftco-section ftco-no-pt bg-light">
  <div class="container ">
    <div class="row no-gutters ">
      <div class="col-md-12	featured-top">
        <div class="row no-gutters ">
          <div class="col-md-4 d-flex align-items-center">
            <form action="/findCarByDate" class="request-form ftco-animate bg-primary col-md-12" method="post">
              <h2>Make your trip</h2>
              <div class="form-group">
                <label for="" class="label">Pick-up location</label>
                <input type="button" class="form-control" id="locationButton" value="{{#if location}}{{location}}{{else}}Location{{/if}} ">

                <input type="hidden" name="location" id="selectedLocation" required>
              </div>
         
              <div class="d-flex row">

                <div class="form-group col-12 col-md-6">
                  <label for="" class="label">Pick-up time</label>
                  <input type="text" class="form-control" name="pickDate" id="pick-up" placeholder="Time"
                    value="{{pickDate}}" required>
                </div>
                <div class="form-group col-12 col-md-6">
                  <label for="" class="label">Drop-off time</label>
                  <input type="text" class="form-control" name="dropDate" id="drop-off" placeholder="Time"
                    value="{{dropDate}}" required>
                </div>
              </div>


              <div class="form-group">
                <button type="submit" id="submitButton" value="Rent A Car Now" class="btn btn-secondary py-3 px-4"><span > Filter Car</span></button>

              </div>


            </form>

          </div>
          <div class="col-md-8 d-flex align-items-center">
            <div id="locations" class="p-0 m-0 ftco-animate services-wrap border rounded col-md-10 p-3">

              <ul class="p-0">
                <li>

                  <input type="text" id="locationSearch" class="col-12 border-0" placeholder="Search locations">

                </li>
                {{#each locations}}
           <li class="locationLinkLi">
                    <span>
                      <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" style="fill: rgba(0, 0, 0, 1);transform: ;msFilter:;"><circle cx="12" cy="12" r="4"></circle><path d="M13 4.069V2h-2v2.069A8.01 8.01 0 0 0 4.069 11H2v2h2.069A8.008 8.008 0 0 0 11 19.931V22h2v-2.069A8.007 8.007 0 0 0 19.931 13H22v-2h-2.069A8.008 8.008 0 0 0 13 4.069zM12 18c-3.309 0-6-2.691-6-6s2.691-6 6-6 6 2.691 6 6-2.691 6-6 6z"></path></svg>
                    </span>
                    <a href="#" class="locationLink">{{this}}</a>
                  </li>
                  {{/each}}
              </ul>
            </div>
            <div id="servicePage" class=" services-wrap rounded-right w-100">
              <h3 class="heading-section mb-4">Better Way to Rent Your Perfect Cars</h3>
              <div class="row d-flex mb-4">
                <div class="col-md-4 d-flex align-self-stretch ftco-animate">
                  <div class="services w-100 text-center">
                    <div class="icon d-flex align-items-center justify-content-center"><span
                        class="flaticon-route"></span></div>
                    <div class="text w-100">
                      <h3 class="heading mb-2">Choose Your Pickup Location</h3>
                    </div>
                  </div>
                </div>
                <div class="col-md-4 d-flex align-self-stretch ftco-animate">
                  <div class="services w-100 text-center">
                    <div class="icon d-flex align-items-center justify-content-center"><span
                        class="flaticon-handshake"></span></div>
                    <div class="text w-100">
                      <h3 class="heading mb-2">Select the Best Deal</h3>
                    </div>
                  </div>
                </div>
                <div class="col-md-4 d-flex align-self-stretch ftco-animate">
                  <div class="services w-100 text-center">
                    <div class="icon d-flex align-items-center justify-content-center"><span
                        class="flaticon-rent"></span></div>
                    <div class="text w-100">
                      <h3 class="heading mb-2">Reserve Your Rental Car</h3>
                    </div>
                  </div>
                </div>
              </div>
            </div>

          </div>

        </div>
      </div>
    </div>
</section>
{{/if}}



<section class="ftco-section bg-light col-12 row   mt-1 py-5 m-0 row d-flex justify-content-end">
 

 <div class="col-md-1 mt-5   d-flex justify-content-end">
 <div class="col-md-8 col-12 d-none  d-md-block border-0 pl-md-3 m-0  p-md-3 p-3 mb-5 ftco-animate rounded car-wrap">
  <i class="icomoon icon-search"></i>

  </div>
 </div>
    <input type="text"  id="carSearch" class="col-md-4 col-11 border-0 pl-3 mr-0 pr-0  p-2 my-5  ftco-animate rounded car-wrap" placeholder="Search Cars ...">
 <div class="col-md-1 mt-5  m-0   d-flex justify-content-left">
 <div class="col-md-8 col-12 d-none  d-md-block border-0  m-0  p-md-3 p-3 mb-5 ftco-animate rounded car-wrap dropup"  data-toggle="dropdown" aria-expanded="false" data-offset="10,20">
<i class="icomoon icon-filter"  ></i>

  </div>
   <div class="dropdown-menu mr-4" >
    <a class="dropdown-item " id="sortBtn" href="#">Price Low to High</a>
    <a class="dropdown-item" href="#" id="sortBtnDescending">Price High to Low</a>
    <a class="dropdown-item" href="/car">Clear</a>
  </div>
 </div>
  </div>
  <aside class="col-md-12">


  </aside>
  <aside class="col-md-2">
    <!-- Sidebar Content -->
    <div id="transmission" class="align-items-left car-wrap rounded ftco-animate my-0 p-2 ml-2">

      <div class="text p-1">

        <h2 class="mb-0"> Transmission</h2>
      </div>
      <input type="checkbox" id="mannual" name="Manual" class="m-1" value="Manual">
      <label for="mannual">Manual</label><br>

      <input type="checkbox" id="automatic" name="Automatic" class="m-1" value="Automatic">
      <label for="automatic">Automatic</label><br>
    </div>
    <div id="engine" class="align-items-left car-wrap rounded ftco-animate my-2 p-2 ml-2">

      <div class="text p-1">

        <h2 class="mb-0"> Engine Type</h2>
      </div>
      <input type="checkbox" id="Petrol" name="Petrol" class="m-1" value="Petrol">
      <label for="Petrol">Petrol</label><br>

      <input type="checkbox" id="Diesel" name="Diesel" class="m-1 " value="Diesel">
      <label for="Diesel">Diesel</label><br>

    </div>
    </div>
    <div id="category" class="align-items-left car-wrap rounded my-2 ftco-animate p-2 ml-2">
      <div class="text p-1">

        <h2 class="mb-0">Category</h2>
      </div>
      <input type="checkbox" id="MUVs" name="MUVs" class="m-1" value="MUVs">
      <label for="MUVs">MUVs</label><br>

      <input type="checkbox" id="SUVs" name="SUVs" class="m-1 " value="SUVs">
      <label for="SUVs">SUVs</label><br>

      <input type="checkbox" id="Sedan" name="Sedan" class="m-1" value="Sedan">
      <label for="Sedan">Sedan</label><br>

      <input type="checkbox" id="Sports Car" name="Sports Car" class="m-1" value="Sports Car">
      <label for="Sports Car">Sports Car</label><br>

      <input type="checkbox" id="Hatchbacks" name="Hatchbacks" class="m-1" value="Hatchbacks">
      <label for="Hatchbacks">Hatchbacks</label><br>

      <input type="checkbox" id="Electric" name="Electric" class="m-1" value="Electric">
      <label for="Electric">Electric</label><br>

      <input type="checkbox" id="All" name="All" class="m-1" value="All">
      <label for="All">All</label><br>
    </div>
  </aside>


  <div class="container col-md-10 align-item-center">

    <div class="rowcars row">

      {{#if data}}

      <div id="noCarsMessage" style="display: none;" class="col-12">
        <div class="justify-content-center">
          <div class="d-flex justify-content-center align-items-center">
            <img src="images/bg_vector.png" style="object-fit: fill;" class="image-fluid mt-0"
              alt="Your image alt text">
          </div>
          <h2 class="text-center fs-4  mb-0 pb-0"> There is no Vehicles available </h2>



        </div>
      </div>



      {{#each data}}
      <div class="col-md-4">
        <div class="car-wrap rounded ftco-animate searchCars">
          <div class="image-container position-relative">
            <a href="/carDetails?id={{_id}}">
              <img style="height: 325px; object-fit: cover; width: 100%;" alt="Car Image"
                class="img rounded d-flex align-items-end" src="{{carImage}}">

            </a>
            <div class="hover-icon d-flex justify-content-end position-absolute top-0 end-0">

            </div>
          </div>
          <div class="text row">
            <h2 class="mb-0 col-9"><a href="carDetails?id={{_id}}">{{carName}}</a></h2>
                    <p class="star p-0 col-3">
                        <span id="starRating{{@index}}" class="m-0"></span>
                    </p>
        <div class="d-flex mb-3 row pl-3">
    <div class="col-auto">
        <span class="cat">{{carModal}}/{{brandName}}</span>
    </div>
    <div class="col-auto ml-auto d-flex justify-content-right">
        <p class="price ">
          <img src="https://cdn-icons-png.flaticon.com/512/11967/11967601.png" alt="Ruppe" title="Ruppe" width="14" height="14">{{dayRent}} <span>/day</span></p>
    </div>
</div>

            <p class="d-flex mb-0 d-block">
              <a href="/bookingCar?carId={{_id}}" class="btn btn-primary py-2 mr-1">Book now</a>
              <a href="/carDetails?id={{_id}}" class="btn btn-secondary py-2 ml-1">Details</a>
            </p>
            <script>
                // Function to dynamically generate star ratings
                function showStars(rating, containerId) {
                    let starsHTML = '';
                    for (let i = 0; i < 5; i++) {
                        if (i < rating) {
                            starsHTML += '<i class="ion-ios-star"style="color: gold;"></i>';
                        } else {
                            starsHTML += '<i class="ion-ios-star-outline"></i>';
                        }
                    }
                    document.getElementById(containerId).innerHTML = starsHTML;
                }

                // Example usage to populate star ratings
                showStars({{this.rate}}, 'starRating{{@index}}');
            </script>
          </div>
        </div>
      </div>
      {{/each}}
      {{else}}
      <div class="col-12 d-flex justify-content-center  ">
        <div class="justify-content-center">
          <div class="d-flex justify-content-center align-items-center">
            <img src="images/bg_vector.png" style="object-fit: fill;" class="image-fluid mt-0"
              alt="Your image alt text">
          </div>
          <h2 class="text-center fs-4  mb-0 pb-0"> There is no Vehicles available </h2>



        </div>

      </div>

      {{/if}}
    </div>

    {{login}}





  </div>
</section>

<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>


<script>
  let sortOrder = 0
  $(document).ready(function() {
    // Function to sort cars by price
    function sortCarsByPrice() {
      sortOrder = 1
      var carsContainer = $('.rowcars');
      var cars = carsContainer.children('.col-md-4').get();

      cars.sort(function(a, b) {
        var priceA = parseFloat($(a).find('.price').text().replace('$', ''));
        var priceB = parseFloat($(b).find('.price').text().replace('$', ''));

        return priceA - priceB;
      });

      // Empty container and append sorted cars
      carsContainer.empty();
      $.each(cars, function(index, car) {
        carsContainer.append(car);
      });
    }

    function sortCarsByPriceDescending() {
      sortOrder = -1
      var carsContainer = $('.rowcars');
      var cars = carsContainer.children('.col-md-4').get();

      cars.sort(function(a, b) {
        var priceA = parseFloat($(a).find('.price').text().replace('$', ''));
        var priceB = parseFloat($(b).find('.price').text().replace('$', ''));

        return priceB - priceA;
      });

      // Empty container and append sorted cars
      carsContainer.empty();
      $.each(cars, function(index, car) {
        carsContainer.append(car);
      });
    }

    // Event listener for sorting button
    $('#sortBtn').on('click', function() {
      sortCarsByPrice();
    });
    sortBtnDescending
    $('#sortBtnDescending').on('click',function(){
      sortCarsByPriceDescending();

    })
  });
  // jQuery
  let search = ''

  $(document).ready(function () {
    $('#locationSearch').on('keyup', function () {
      var searchTerm = $(this).val().toLowerCase();
      $('.locationLink').each(function () {
        var text = $(this).text().toLowerCase();
        if (text.includes(searchTerm)) {
          $(this).parent().show();
        } else {
          $(this).parent().hide();
        }
      });
    });
  });
  $(document).ready(function () {
    $('#carSearch').on('keyup', function () {
      var searchTerm = $(this).val().toLowerCase();
        search = searchTerm
      var carsFound = false;

      $('.searchCars').each(function () {
        var text = $(this).find('h2 a').text().toLowerCase();
        if (text.includes(searchTerm)) {
          $(this).parent().show(); 
          carsFound = true;
        } else {
          $(this).parent().hide();
        }
      });

      if (!carsFound) {
        $('#noCarsMessage').show();
      } else {
        $('#noCarsMessage').hide();
      }
    });
  });


  let transmission = [];
  let engine = []
  let category = []

  let locationData = ''
  let pickTimeData = ''
  let carId = ''

  
  const submitBtn = document.getElementById('submitButton');

  const calendarEl = document.getElementById('calendar');
if (submitBtn) {
  submitBtn.addEventListener('click', function () {

    carId = document.getElementById('id').value;
    $('.container .rowcars').empty();

    submit()



  });
}


  $('#transmission input').on('change', function () {
    // Check if the checkbox is checked
    if ($(this).is(':checked')) {
      if (transmission.length === 2) {
        transmission = transmission.splice()

      }
      // If checked, add its value to the transmission array
      transmission.push($(this).val());
    } else {

      // If unchecked, remove its value from the transmission array
      const index = transmission.indexOf($(this).val());
      if (index !== -1) {
        transmission.splice(index, 1);

      }
    }

    $('.container .rowcars').empty();

    submit()
  })

  $('#engine input').on('change', function () {
    // Check if the checkbox is checked
    if ($(this).is(':checked')) {
      if (engine.length === 2) {
        engine = engine.splice()

      }
      // If checked, add its value to the transmission array
      engine.push($(this).val());
    } else {
      // If unchecked, remove its value from the transmission array
      const index = engine.indexOf($(this).val());
      if (index !== -1) {
        engine.splice(index, 1);

      }
    }


    $('.container .rowcars').empty();
    submit()
  })

  $('#category input').on('change', function () {
    if ($(this).val() === 'All') {
      if ($(this).is(':checked')) {
        // If "All" checkbox is checked, check all other checkboxes
        $('#category input:not(:checked)').prop('checked', true);
        // Clear the category array and add 'All'
        category = ['MUVs', 'SUVs', 'Sedan', 'Sports Car', 'Hatchbacks', 'Electric']

      } else {
        // If "All" checkbox is unchecked, uncheck all other checkboxes
        $('#category input:checked').prop('checked', false);
        // Clear the category array
        category = [];
      }
    } else {
      // If other checkboxes are changed
      if ($(this).is(':checked')) {
        if (category.length === 6) {
          // Remove 'All' if all checkboxes are already checked
          category = category.splice()
        }
        // If checked, add its value to the category array
        category.push($(this).val());
      } else {
        // If unchecked, remove its value from the category array
        const index = category.indexOf($(this).val());
        if (index !== -1) {
          category.splice(index, 1);
        }
        // Uncheck the "All" checkbox if any other checkbox is unchecked
        $('#category input[value="All"]').prop('checked', false);
      }
    }

    // Update the view
    $('.container .rowcars').empty();
    submit();
  });

  // Event listener for keydown event in the search input field
  // Event listener for keydown event in the search input field
  $('#search').on('keydown', function (event) {
    // Check if the Enter key is pressed (keyCode 13)
    if (event.keyCode === 13) {
      // Get the value entered in the search input field
      searchText = $(this).val();

      // Log the search text to the console for testing
      console.log("Search text:", searchText);
      searchCar()
      $('.container .rowcars').empty();

      // Clear the input field after logging the search text (optional)
      $(this).val('');
    }
  });






  function submit() {
    if (transmission.length === 0) {
      transmission = ['Manual', 'Automatic']
    }
    if (engine.length === 0) {
      engine = ['Petrol', 'Diesel']
    }
    if (category.length === 0) {
      category = ['MUVs', 'SUVs', 'Sedan', 'Sports Car', 'Hatchbacks', 'Electric']
    }

    url = '/filterCars'
    console.log(transmission)
    console.log(engine)
    console.log(category)
    console.log(search)


    axios.post(url, { transmission: transmission, fuel: engine, carCategory: category, search, sortOrder })

      .then(response => {
        const cars = response.data;

        if (cars.length === 0) {
              const noCar = `
                <div  style="display: block;" class="col-12">
        <div class="justify-content-center">
          <div class="d-flex justify-content-center align-items-center">
            <img src="images/bg_vector.png" style="object-fit: fill;" class="image-fluid mt-0"
              alt="Your image alt text">
          </div>
          <h2 class="text-center fs-4  mb-0 pb-0"> There is no Vehicles available </h2>



        </div>
      </div>`
$('.container .rowcars').append(noCar);

        } else {
          cars.forEach(car => {
          const carHtml = `
    <div class="col-md-4">
        <div class="car-wrap rounded searchCars">
            <div class="image-container position-relative">
                <a href="/carDetails?id=${car._id}">
                    <img style="height: 325px; object-fit: cover; width: 100%;" alt="Car Image" class="img rounded d-flex align-items-end" src="${car.carImage}">
                </a>
                <div class="hover-icon d-flex justify-content-end position-absolute top-0 end-0"></div>
            </div>
            <div class="text row">
                <h2 class="mb-0 col-9"><a href="car-single.html">${car.carName}</a></h2>
                <p class="star p-0 col-3">
                    ${getStarRating(car.rate)}
                </p>
                <div class="d-flex mb-3">
                    <span class="cat">${car.carModal}/${car.brandName}</span>
                    <p class="price ml-auto">${car.dayRent} <span>/day</span></p>
                </div>
                <p class="d-flex mb-0 d-block"></p>
                <a href="/bookingCar?carId=${car._id}" class="btn btn-primary py-2 mr-1">Book now</a>
                <a href="/carDetails?id=${car._id}" class="btn btn-secondary py-2 ml-1">Details</a>
            </div>
        </div>
    </div>
`;

$('.container .rowcars').append(carHtml);

function getStarRating(rating) {
    let starsHTML = '';
    const roundedRating = Math.round(rating); // Round the rating to the nearest integer
    for (let i = 0; i < 5; i++) {
        if (i < roundedRating) {
            starsHTML += '<i class="ion-ios-star" style="color: gold;"></i>';
        } else {
            starsHTML += '<i class="ion-ios-star-outline" "></i>';
        }
    }
    return starsHTML;
}

          });

        }
      })

      .catch(error => {
        console.log(error)
      })
  }

  // Function to attach wishlist button event listeners

  // Your searchCar function

  // Get the input fields for start and end dates
  const locations = document.getElementById('locations')
  const servicePage = document.getElementById('servicePage')
  const locationButton = document.getElementById('locationButton')
  document.addEventListener('DOMContentLoaded', function () {

    document.querySelectorAll('.locationLinkLi').forEach(anchor => {
      anchor.addEventListener('click', function (e) {
        e.preventDefault();
        const selectedLocation = this.textContent.trim();
        document.getElementById('selectedLocation').value = selectedLocation;
        console.log("Selected location:", selectedLocation);
        document.getElementById('locationButton').value = selectedLocation;

        console.log("Selected location:", selectedLocation);
        servicePage.style.display = 'block';
        locations.style.display = 'none';

      });
    });
  })
  if (locationButton) {
  locationButton.addEventListener('click', function (e) {
    e.preventDefault();
    servicePage.style.display = 'none';
    locations.style.display = 'block';
  });
  }


  flatpickr("#pick-up", {
    enableTime: true,
    dateFormat: "Y-m-d H:i",
    minTime: "08:00",
    maxTime: "22:00",
    minDate: "today",
    onChange: function (selectedDates, dateStr, instance) {
      document.getElementById("drop-off")._flatpickr.set("minDate", dateStr);
    }
  });

  flatpickr("#drop-off", {
    enableTime: true,
    dateFormat: "Y-m-d H:i",
    minTime: "08:00",
    maxTime: "22:00",
    minDate: "today"
  });


  window.addEventListener('popstate', function (event) {
    // Check if the popstate event is triggered by navigating back
    if (event.state && event.state.pageReload) {
      // Reload the page
      location.reload();

    }
  });

  // Push a state into history to trigger popstate event when navigating back
  history.pushState({ pageReload: true }, '');







  // Add event listeners to checkboxes


</script>